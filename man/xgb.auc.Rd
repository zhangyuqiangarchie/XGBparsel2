% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xgb_auc.R
\name{xgb.auc}
\alias{xgb.auc}
\title{xgb.auc}
\usage{
xgb.auc(
  data,
  n,
  cvround = cvround,
  cvfold = cvfold,
  early_stopping_rounds = early_stopping_rounds,
  seed.number = seed.number,
  nthread = nthread
)
}
\arguments{
\item{data}{training dataset. xgb.auc accepts only an \code{xgb.DMatrix} as the input.}

\item{n}{the number of cycles.}

\item{cvround}{max number of boosting iterations.}

\item{cvfold}{the original dataset is randomly partitioned into \code{nfold} equal size subsamples.}

\item{early_stopping_rounds}{If NULL, the early stopping function is not triggered. If set to an integer k,
training with a validation set will stop if the performance doesn't improve for k rounds.}

\item{seed.number}{random number seed.}

\item{nthread}{number of thread used in training.}
}
\value{
a \code{list} contains the best_param,the best_auc and best_auc_index.
}
\description{
xgb.auc is an automatic parameter adjustment function which is applied to the Classification task by xgboost.
}
\examples{

library(xgboost)
data(redwine,package="XGBparsel")
redwine$grade[redwine$quality <= 5] <- "0"
redwine$grade[redwine$quality >= 6] <- "1"
myvars <- names(redwine) \%in\% "quality"
redwine <- redwine[!myvars]
redwine_s <- Matrix::sparse.model.matrix( grade~.-1 ,data = redwine)
train <- xgb.DMatrix( data = redwine_s , label = redwine$grade )
fit <-xgb.auc(train,10,cvround=100,cvfold=5,
                  early_stopping_rounds =10,
                  seed.number = 12345,nthread = 8)
}
